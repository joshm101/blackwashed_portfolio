!function(window){"use strict";function registerModule(moduleName,dependencies){angular.module(moduleName,dependencies||[]).config(["$mdIconProvider","$mdThemingProvider",function($mdIconProvider,$mdThemingProvider){$mdIconProvider.defaultIconSet("lib/mdi/svg/mdi.svg"),$mdThemingProvider.theme("default").primaryPalette("indigo").accentPalette("green")}]),angular.module(applicationModuleName).requires.push(moduleName)}var applicationModuleName="mean",service={applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","angularFileUpload","ngMaterial","slick"],registerModule:registerModule};window.ApplicationConfiguration=service}(window),function(app){"use strict";function bootstrapConfig($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}function init(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[app.applicationModuleName])}angular.module(app.applicationModuleName,app.applicationModuleVendorDependencies),angular.module(app.applicationModuleName).config(bootstrapConfig),bootstrapConfig.$inject=["$locationProvider","$httpProvider"],angular.element(document).ready(init)}(ApplicationConfiguration);var aboutPage=function(app){app.registerModule("about",["ngFileUpload","ngMaterial","ngAnimate","core","core.routes","photoWorks","videoWorks"]),app.registerModule("about.services")}(ApplicationConfiguration);!function(app){"use strict";app.registerModule("articles",["core"]),app.registerModule("articles.services"),app.registerModule("articles.routes",["ui.router","core.routes","articles.services"])}(ApplicationConfiguration);var bw_interface=function(app){"use strict";app.registerModule("bw-interface",["Upload","ngFileUpload","ngMaterial","ngAnimate","core","core.routes","photoWorks","videoWorks","about"]),app.registerModule("bw-interface.services")}(ApplicationConfiguration);!function(app){"use strict";app.registerModule("chat",["core"]),app.registerModule("chat.routes",["ui.router","core.routes"])}(ApplicationConfiguration),function(app){"use strict";app.registerModule("bw-interface"),app.registerModule("bw-interface.services"),app.registerModule("core",["bw-interface.services","works","works.services","ngAnimate","ngMaterial"]),app.registerModule("core.routes",["ui.router"]),app.registerModule("core.admin",["core"]),app.registerModule("core.admin.routes",["ui.router"])}(ApplicationConfiguration),function(app){"use strict";app.registerModule("cycler")}(ApplicationConfiguration);var images=function(app){"use strict";app.registerModule("images")}(ApplicationConfiguration),photoWorks=function(app){"use strict";app.registerModule("photoWorks",["ngMaterial","bw-interface","videoWorks","videoWorks.services"]),app.registerModule("photoWorks.services")}(ApplicationConfiguration);!function(app){"use strict";app.registerModule("users",["ngMaterial"]),app.registerModule("users.admin"),app.registerModule("users.admin.routes",["ui.router","core.routes","users.admin.services"]),app.registerModule("users.admin.services"),app.registerModule("users.routes",["ui.router","core.routes"]),app.registerModule("users.services")}(ApplicationConfiguration);var videoWorks=function(app){"use strict";app.registerModule("videoWorks",["ngMaterial","bw-interface","photoWorks","photoWorks.services"]),app.registerModule("videoWorks.services")}(ApplicationConfiguration);!function(app){"use strict";app.registerModule("works"),app.registerModule("works.services"),app.registerModule("works.filters")}(ApplicationConfiguration),function(){"use strict";function AboutPageService($rootScope,$http){var service={about:[],getAbout:function(){$http.get("/api/about/get_about_page").then(function(res){200===res.status&&(service.about=res.data,$rootScope.$broadcast("AboutPageService.update"),console.log("service.about: ",service.about))})},updateAbout:function(edit){service.about=[],service.about.push(edit),$rootScope.$broadcast("AboutPageService.update")}};return service}angular.module("about").service("AboutPageService",AboutPageService),AboutPageService.$inject=["$rootScope","$http"]}(),function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Articles",state:"articles",type:"dropdown",roles:["*"]}),menuService.addSubMenuItem("topbar","articles",{title:"List Articles",state:"articles.list"}),menuService.addSubMenuItem("topbar","articles",{title:"Create Article",state:"articles.create",roles:["user"]})}angular.module("articles").run(menuConfig),menuConfig.$inject=["menuService"]}(),function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",template:"<ui-view/>"}).state("articles.list",{url:"",templateUrl:"modules/articles/client/views/list-articles.client.view.html",controller:"ArticlesListController",controllerAs:"vm",data:{pageTitle:"Articles List"}}).state("articles.create",{url:"/create",templateUrl:"modules/articles/client/views/form-article.client.view.html",controller:"ArticlesController",controllerAs:"vm",resolve:{articleResolve:newArticle},data:{roles:["user","admin"],pageTitle:"Articles Create"}}).state("articles.edit",{url:"/:articleId/edit",templateUrl:"modules/articles/client/views/form-article.client.view.html",controller:"ArticlesController",controllerAs:"vm",resolve:{articleResolve:getArticle},data:{roles:["user","admin"],pageTitle:"Edit Article {{ articleResolve.title }}"}}).state("articles.view",{url:"/:articleId",templateUrl:"modules/articles/client/views/view-article.client.view.html",controller:"ArticlesController",controllerAs:"vm",resolve:{articleResolve:getArticle},data:{pageTitle:"Article {{ articleResolve.title }}"}})}function getArticle($stateParams,ArticlesService){return ArticlesService.get({articleId:$stateParams.articleId}).$promise}function newArticle(ArticlesService){return new ArticlesService}angular.module("articles.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getArticle.$inject=["$stateParams","ArticlesService"],newArticle.$inject=["ArticlesService"]}(),function(){"use strict";function ArticlesController($scope,$state,article,$window,Authentication){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.article.$remove($state.go("articles.list"))}function save(isValid){function successCallback(res){$state.go("articles.view",{articleId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.article._id?vm.article.$update(successCallback,errorCallback):vm.article.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.articleForm"),!1)}var vm=this;vm.article=article,vm.authentication=Authentication,vm.error=null,vm.form={},vm.remove=remove,vm.save=save}angular.module("articles").controller("ArticlesController",ArticlesController),ArticlesController.$inject=["$scope","$state","articleResolve","$window","Authentication"]}(),function(){"use strict";function ArticlesListController(ArticlesService){var vm=this;vm.articles=ArticlesService.query()}angular.module("articles").controller("ArticlesListController",ArticlesListController),ArticlesListController.$inject=["ArticlesService"]}(),function(){"use strict";function ArticlesService($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}angular.module("articles.services").factory("ArticlesService",ArticlesService),ArticlesService.$inject=["$resource"]}(),function(){"use strict";function InterfaceController($scope,$rootScope,$state,Upload,$mdDialog,$mdToast,$http,CyclerImages,SelectedImages,PhotoWorks,VideoWorks,AboutPageService,AboutImage){function sanitizePosition(){var current=$scope.toastPosition;current.bottom&&last.top&&(current.top=!1),current.top&&last.bottom&&(current.bottom=!1),current.right&&last.left&&(current.left=!1),current.left&&last.right&&(current.right=!1),last=angular.extend({},current)}var last={bottom:!1,top:!0,left:!1,right:!0};$scope.toastPosition=angular.extend({},last),$scope.getToastPosition=function(){return sanitizePosition(),Object.keys($scope.toastPosition).filter(function(pos){return $scope.toastPosition[pos]}).join(" ")},$scope.showSimpleToast=function(error){var pinTo=$scope.getToastPosition();switch(error){case"images":$mdToast.show($mdToast.simple().textContent("Please add at least one image.").position(pinTo).hideDelay(3e3));break;case"title":$mdToast.show($mdToast.simple().textContent("Another work with that title already exists.").position(pinTo).hideDelay(3e3));break;case"video-image":$mdToast.show($mdToast.simple().textContent("Please add a cover image.").position(pinTo).hideDelay(3e3));break;case"missing-title":$mdToast.show($mdToast.simple().textContent("Please add a title.").position(pinTo).hideDelay(3e3));break;case"video-url":$mdToast.show($mdToast.simple().textContent("Please add a video URL.").position(pinTo).hideDelay(3e3))}},$scope.editedModelsFormInput={},$scope.modelsFormInput={},$scope.copyright="",$scope.photoWorkTitle="",$scope.castFormInput={},$scope.videoWorkTitle="",$scope.videoUrl="",$scope.directedByFormInput={},$scope.editedByFormInput={},$scope.videoCoverImage=[],$scope.postText="",$scope.bwUploading={visibility:"hidden"},$scope.upload=function(file){console.log("file is: "+JSON.stringify(file)),CyclerImages.uploadCyclerImage(file)},$scope.getCyclerImages=function(){CyclerImages.getCyclerImages()},$scope.initializePage=function(){console.log("initializePage()"),CyclerImages.getCyclerImages(),PhotoWorks.getPhotoWorks(),VideoWorks.getVideoWorks(),AboutPageService.getAbout()},$scope.deleteImage=function(){},$scope.signOut=function(){$http.get("/api/auth/signout").then(function(resp){200===resp.status&&$state.go("home")})},$scope.editAbout=function(){$mdDialog.show({controller:["scope",function(scope){console.log("ok"),console.log("AboutPageService.about: ",AboutPageService.about),scope.imageUrl="",scope.aboutText="",0===AboutPageService.about.length?(scope.aboutPage={},console.log("null"),scope.imageUrl=""):(scope.aboutPage=AboutPageService.about[0],scope.aboutText=scope.aboutPage.text,scope.imageUrl=scope.aboutPage.imageUrl),scope.submit=function(){AboutImage.newImage.length>0?Upload.upload({url:"/api/about/edit_about_page",arrayKey:"",data:{file:AboutImage.newImage[0],aboutText:scope.aboutText}}).then(function(resp){console.log("success"),console.log("resp: ",resp),AboutPageService.updateAbout(resp.data),$mdDialog.hide()},function(resp){console.log("error: ",resp)},function(evt){console.log("status: ",evt)}):Upload.upload({url:"/api/about/edit_about_page",arrayKey:"",data:{aboutText:scope.aboutText}}).then(function(resp){console.log("success"),console.log("resp: ",resp),AboutPageService.updateAbout(resp.data),$mdDialog.hide()},function(resp){console.log("error: ",resp)},function(evt){console.log("status: ",evt)})},$rootScope.hide=function(){$mdDialog.hide()},scope.cancel=function(){$mdDialog.cancel()},$rootScope.answer=function(answer){$mdDialog.hide(answer)}}],templateUrl:"modules/bw-interface/client/views/edit-about.html",parent:angular.element(document.body),clickOutsideToClose:!0,fullscreen:!1})},$scope.submitVideoWork=function(){if(console.log("submitting video work"),console.log("postText: ",$scope.postText),console.log("castFormInput: ",$scope.castFormInput),console.log("copyright: ",$scope.copyright),console.log("videoWorkTitle: ",$scope.videoWorkTitle),console.log("editorFormInput: ",$scope.editedByFormInput),console.log("directorFormInput: ",$scope.directedByFormInput),console.log("videoUrl: ",$scope.videoUrl),console.log("videoCoverImage: ",$rootScope.videoCoverImage),angular.equals([],$rootScope.videoCoverImage))return console.log("Must add at least one image"),void $scope.showSimpleToast("video-image");if(""===$scope.videoWorkTitle)return void $scope.showSimpleToast("missing-title");for(var i=0;i<PhotoWorks.photoWorks.length;++i)if(PhotoWorks.photoWorks[i].title===$scope.photoWorkTitle)return void $scope.showSimpleToast("title");for(var i=0;i<VideoWorks.videoWorks.length;++i)if(VideoWorks.videoWorks[i].title===$scope.photoWorkTitle)return void $scope.showSimpleToast("title");if(""===$scope.videoUrl)return void $scope.showSimpleToast("video-url");console.log("typeof videoCoverImage ",typeof $rootScope.videoCoverImage);var castArray=[];for(var member in $scope.castFormInput)castArray.push($scope.castFormInput[member]);var directorArray=[];for(var director in $scope.directedByFormInput)directorArray.push($scope.directedByFormInput[director]);var editorArray=[];for(var editor in $scope.editedByFormInput)editorArray.push($scope.editedByFormInput[editor]);var coverImageFile=$rootScope.videoCoverImage,videoWork={title:$scope.videoWorkTitle,cast:castArray,directedBy:directorArray,editedBy:editorArray,workInfo:$scope.postText,copyright:$scope.copyright,videoUrl:$scope.videoUrl};$scope.bwUploading.visibility="visible",Upload.upload({url:"/api/video_works/add_video_work",arrayKey:"",data:{file:coverImageFile,videoWork:JSON.stringify(videoWork)}}).then(function(resp){console.log("Success: ",resp),VideoWorks.addVideoWork(resp.data),$scope.progressBarValue=0,$scope.bwUploading.visibility="hidden",$mdDialog.hide(),$scope.editedByFormInput=[],$scope.directedByFormInput=[],$scope.castFormInput=[],$scope.videoUrl="",$scope.copyright=[],$scope.postText="",$scope.videoWorkTitle=""},function(resp){console.log("Error: ",resp)},function(evt){console.log("progress: ",evt),$scope.progressBarValue=evt.loaded/evt.total*100})},$scope.addPhotoWorkImages=[],$scope.getPhotoWorks=function(){PhotoWorks.getPhotoWorks(),console.log("photoWorks: "+PhotoWorks.photoWorks)},$scope.submitPhotoWork=function(event){console.log("submitting"),console.log("postText: ",$scope.postText),console.log("modeslFormInput: "+JSON.stringify($scope.modelsFormInput)),console.log("copyright: "+$scope.copyright),console.log("photoWorkTitle: "+$scope.photoWorkTitle),console.log("SelectedImages: "+JSON.stringify(SelectedImages.images)),$scope.progressBarValue=0;var models=$scope.modelsFormInput;if(angular.equals([],SelectedImages.images))return console.log("Must add at least one image"),void $scope.showSimpleToast("images");if(""===$scope.photoWorkTitle)return void $scope.showSimpleToast("missing-title");for(var i=0;i<PhotoWorks.photoWorks.length;++i)if(PhotoWorks.photoWorks[i].title===$scope.photoWorkTitle)return void $scope.showSimpleToast("title");for(var i=0;i<VideoWorks.videoWorks.length;++i)if(VideoWorks.videoWorks[i].title===$scope.photoWorkTitle)return void $scope.showSimpleToast("title");var modelsArray=[];for(var model in models)console.log("models: "+models[model]),modelsArray.push(models[model]);$scope.bwUploading.visibility="visible",Upload.upload({url:"/api/photo_works/add_photo_work",arrayKey:"",data:{file:SelectedImages.images,postText:$scope.postText,workTitle:$scope.photoWorkTitle,copyright:$scope.copyright,models:modelsArray}}).then(function(resp){console.log("Success: "+resp),console.log(JSON.stringify(resp.data)),PhotoWorks.addPhotoWork(resp.data),$scope.postText="",$scope.photoWorkTitle="",$scope.copyright="",$scope.modelsFormInput=[],SelectedImages.images=[],$mdDialog.hide()},function(resp){console.log("error status: "+resp.status),$scope.progressBarValue=0,$scope.bwUploading.visibility="hidden"},function(evt){console.log("evt: ",evt),$scope.progressBarValue=evt.loaded/evt.total*100})},$scope.$on("images.update",function(event){var temp=CyclerImages.images;$scope.cyclerImages=temp,console.log("temp!: ",temp),console.log("cyclerImages: "+JSON.stringify($scope.cyclerImages))}),$scope.$on("photoWorks.update",function(event){console.log("scope.on photoWorks.update");var temp=PhotoWorks.photoWorks;$scope.photoWorksArray=temp,console.log("$scope.photoWorksArray = "+$scope.photoWorksArray)}),$scope.$on("videoWorks.update",function(event){console.log("scope.on videoWorks.update");var temp=VideoWorks.videoWorks;$scope.videoWorksArray=temp,console.log("$scope.videoWorksArray: ",$scope.videoWorksArray)}),$scope.$on("SelectedImages.update",function(event){$scope.addPhotoWorkImages=SelectedImages.images})}angular.module("bw-interface",["ngFileUpload","ngMaterial","core","photoWorks","videoWorks","about"]).controller("InterfaceController",InterfaceController),InterfaceController.$inject=["$scope","$rootScope","$state","Upload","$mdDialog","$mdToast","$http","CyclerImages","SelectedImages","PhotoWorks","VideoWorks","AboutPageService","AboutImage"]}(),function(){"use strict";function editAboutImageThumbnail($rootScope,$state,$timeout,$mdDialog,AboutImage){var directive={restrict:"E",scope:{imageUrl:"="},link:function(scope){},templateUrl:"modules/bw-interface/client/views/edit-about-image-thumbnail.html"};return directive}function editAboutImage($rootScope,$state,$timeout,$mdDialog,AboutImage){var directive={restrict:"E",scope:{imageUrl:"="},link:function(scope){scope.image=[],scope.selectedAboutImage=function(file){null!==file&&(scope.imageSelected=file,AboutImage.addImage(file),console.log(AboutImage.newImage),scope.imageUrl=AboutImage.newImage[0].$ngfBlobUrl)}},templateUrl:"modules/bw-interface/client/views/edit-about-image.html"};return directive}function editCoverImageThumbnail($rootScope,$state,$timeout,$mdDialog,VideoCoverImage){var directive={restrict:"E",scope:{imageUrl:"="},link:function(scope){},templateUrl:"modules/bw-interface/client/views/edit-cover-image-thumbnail.html"};return directive}function editVideoCoverImage($rootScope,$state,$timeout,$mdDialog,VideoCoverImage){var directive={restrict:"E",scope:{work:"="},link:function(scope){scope.coverImage=[],scope.coverImageUrl=scope.work.coverImageUrl,console.log("scope.coverImageUrl: ",scope.coverImageUrl),scope.selectedCoverImage=function(file){null!==file&&(console.log("file is: ",file),scope.imageSelected=file,VideoCoverImage.addImage(file),scope.coverImageUrl=VideoCoverImage.image[0].$ngfBlobUrl,$rootScope.videoCoverImage=VideoCoverImage.image)},$rootScope.$on("VideoCoverImage.update",function(){scope.coverImageUrl=VideoCoverImage.image[0].$ngfBlobUrl,$rootScope.videoCoverImage=VideoCoverImage.image})},templateUrl:"modules/bw-interface/client/views/edit-video-cover-image.html"};return directive}function editVideoWorkForm($rootScope,$state,$timeout,$mdDialog,VideoCoverImage){var directive={restrict:"E",scope:{work:"=",editCastInputModel:"=",editDirectorsInputModel:"=",editEditorsInputModel:"="},link:function(scope){},templateUrl:"modules/bw-interface/client/views/edit-video-work-form.html"};return directive}function coverImageThumbnail($rootScope,$state,$timeout,$mdDialog,VideoCoverImage){var directive={restrict:"E",scope:{imageUrl:"="},link:function(scope){scope.removeImage=function(imageUrl){VideoCoverImage.removeImage()}},templateUrl:"modules/bw-interface/client/views/cover-image-thumbnail.html"};return directive}function uploadCoverImage($rootScope,$state,$timeout,$mdDialog,VideoCoverImage){var directive={restrict:"E",scope:{},link:function(scope){scope.coverImage=[],scope.selectedCoverImage=function(file){console.log("file is: ",file),scope.imageSelected=file,VideoCoverImage.addImage(file),scope.coverImage=VideoCoverImage.image,$rootScope.videoCoverImage=VideoCoverImage.image},$rootScope.$on("VideoCoverImage.update",function(){scope.coverImage=VideoCoverImage.image,$rootScope.videoCoverImage=VideoCoverImage.image})},templateUrl:"modules/bw-interface/client/views/upload-cover-image.html"};return directive}function editorInput($rootScope,$state,$timeout,$mdDialog){var directive={restrict:"E",scope:{editorFormInput:"="},link:function(scope){scope.editorNumber=0,scope.editors=[{name:"editor_"+scope.editorNumber}],scope.addEditor=function(){scope.editors.push({name:"editor_"+ ++scope.editorNumber})}},templateUrl:"modules/bw-interface/client/views/editor-input.html"};return directive}function directorInput($rootScope,$state,$timeout,$mdDialog){var directive={restrict:"E",scope:{directorFormInput:"="},link:function(scope){scope.directorNumber=0,scope.directors=[{name:"director_"+scope.directorNumber}],scope.addDirector=function(){scope.directors.push({name:"director_"+ ++scope.directorNumber})}},templateUrl:"modules/bw-interface/client/views/director-input.html"};return directive}function castInput($rootScope,$state,$timeout,$mdDialog){var directive={restrict:"E",scope:{castFormInput:"="},link:function(scope){scope.castNumber=0,scope.castMembers=[{name:"cast_"+scope.castNumber}],scope.addCastMember=function(){scope.castMembers.push({name:"cast_"+ ++scope.castNumber}),console.log(scope.modelsFormInput)}},templateUrl:"modules/bw-interface/client/views/cast-input.html"};return directive}function editEditorsInput($rooTscope,$state,$timeout,$mdDialog){var directive={restrict:"E",scope:{editorsFormInput:"=",editors:"="},link:function(scope){var i=0;scope.editorNumber=0;for(var editor in scope.editorsFormInput)scope.editorsFormInput[editor]=scope.editors[i],++i;scope.addEditor=function(){scope.editors.push("")}},templateUrl:"modules/bw-interface/client/views/edit-editors-input.html"};return directive}function editDirectorsInput($rootScope,$state,$timeout,$mdDialog){var directive={restrict:"E",scope:{directorsFormInput:"=",directors:"="},link:function(scope){var i=0;scope.directorNumber=0;for(var director in scope.directorsFormInput)scope.directorsFormInput[director]=scope.directors[i],++i;scope.addDirector=function(){scope.directors.push("")}},templateUrl:"modules/bw-interface/client/views/edit-directors-input.html"};return directive}function editCastInput($rootScope,$state,$timeout,$mdDialog){var directive={restrict:"E",scope:{castFormInput:"=",cast:"="},link:function(scope){var i=0;scope.castNumber=0,console.log("scope.cast: ",scope.cast);for(var member in scope.castFormInput)scope.castFormInput[member]=scope.cast[i],++i;scope.addCastMember=function(){scope.cast.push("")}},templateUrl:"modules/bw-interface/client/views/edit-cast-input.html"};return directive}function addVideoWorkForm($rootScope,$state,$timeout,$mdDialog){var directive={restrict:"E",scope:{workTitle:"=",videoUrl:"=",postText:"=",copyright:"=",editorFormInput:"=",castFormInput:"=",directorFormInput:"=",videoCoverImage:"="},link:function(scope){},templateUrl:"modules/bw-interface/client/views/add-video-work-form.html"};return directive}function editImageThumbnail($rootScope,$state,$timeout,$mdDialog,SelectedImages,EditImages){var directive={restrict:"E",scope:{coverImage:"=",imageUrl:"="},link:function(scope){scope.setCoverImage=function(imageUrl){EditImages.setCoverImage(imageUrl)},scope.removeImage=function(imageUrl){EditImages.removeImage(imageUrl)}},templateUrl:"modules/bw-interface/client/views/edit-image-thumbnail.html"};return directive}function editUploadPicsModule($rootScope,$state,$timeout,$mdDialog,SelectedImages,EditImages){var directive={restrict:"E",scope:{work:"="},link:function(scope){scope.serviceImages=EditImages.images,scope.editSelected=function(files,badFiles){scope.files=files,console.log("scope.files: ",scope.files);for(var i=0;i<scope.files.length;++i)console.log("url: ",scope.files[i].$ngfBlobUrl),EditImages.addNewImage(scope.files[i],scope.files[i].$ngfBlobUrl,!1,!1)}},templateUrl:"modules/bw-interface/client/views/edit-upload-pics-module.html"};return directive}function editPhotoWorkForm($rootScope,$state,$timeout,$mdDialog,SelectedImages,EditImages){var directive={restrict:"E",scope:{work:"=",editModelsInputModel:"="},link:function(scope){console.log("work is: ",scope.work),console.log("editModelsInputModel is: ",scope.editModelsInputModel)},templateUrl:"modules/bw-interface/client/views/edit-photo-work-form.html"};return directive}function editModelsInput($rootScope,$state,$timeout,$mdDialog,SelectedImages,EditImages){var directive={restrict:"E",scope:{modelsFormInput:"=",models:"="},link:function(scope){var i=0;scope.modelNumber=0,console.log("scope.models: "+scope.models),console.log("scope.modelsFormInput: ",scope.modelsFormInput);for(var model in scope.modelsFormInput)scope.modelsFormInput[model]=scope.models[i],++i;scope.addModel=function(){scope.models.push("")}},templateUrl:"modules/bw-interface/client/views/edit-models-input.html"};return directive}function modelsInput($rootScope,$state,$timeout,$mdDialog,SelectedImages){var directive={restrict:"E",scope:{modelsFormInput:"="},transclude:!0,link:function(scope){scope.modelNumber=0,scope.models=[{name:"model_"+scope.modelNumber}],scope.addModel=function(event){scope.models.push({name:"model "+ ++scope.modelNumber}),console.log(scope.modelsFormInput)}},templateUrl:"modules/bw-interface/client/views/models-input.html"};return directive}function imageThumbnail($rootScope,$state,$timeout,Upload,SelectedImages){var directive={restrict:"E",scope:{imageUrl:"=",coverImage:"="},link:function(scope){console.log("okay"),scope.removeImage=function(imgUrl){console.log("imgUrl is: "+imgUrl),SelectedImages.removeImage(imgUrl)},scope.setCoverImage=function(imgUrl){SelectedImages.setCoverImage(imgUrl)}},templateUrl:"modules/bw-interface/client/views/image-thumbnail.html"};return directive}function uploadPicsModule($rootScope,$state,$timeout,Upload,SelectedImages){var directive={restrict:"E",scope:{serviceImages:"="},link:function(scope){console.log("ok"),scope.serviceImages=SelectedImages.images,scope.selected=function(files,errFiles){scope.files=files,angular.forEach(scope.files,function(file){console.log("file forEach "+JSON.stringify(file)),console.log("file blob: "+file.$ngfBlobUrl),SelectedImages.addImage(file)})}},templateUrl:"modules/bw-interface/client/views/upload-pics-module.html"};return directive}function interfaceCyclerImage($rootScope,$state,CyclerImages){var directive={restrict:"E",scope:{image:"="},link:function(scope){scope.deleteImage=function(imagePath){CyclerImages.deleteCyclerImage(imagePath)}},templateUrl:"modules/bw-interface/client/views/cycler-image.html"};return directive}function addPhotoWorkForm($rootScope,$state){var directive={restrict:"E",scope:{modelsFormInput:"=",copyright:"=",photoWorkTitle:"=",postText:"=",photoWorkImages:"="},link:function(scope){console.log("ok")},templateUrl:"modules/bw-interface/client/views/add-photo-work-form.html"};return directive}function addWorkFab($rootScope,$state,$timeout,$mdDialog,CyclerImages,VideoCoverImage,SelectedImages){var directive={restrict:"E",scope:{},link:function(scope,$timeout){function DialogController($rootScope,$mdDialog){$rootScope.hide=function(){console.log("$mdDialog: "+JSON.stringify($mdDialog)),$mdDialog.hide()},$rootScope.cancel=function(){$mdDialog.cancel()},$rootScope.answer=function(answer){console.log("answer: "+answer),$mdDialog.hide(answer)}}DialogController.$inject=["$rootScope","$mdDialog"],console.log("ok");var self=this;self.hidden=!1,self.isOpen=!1,self.hover=!1,scope.items=[{name:"Add Photo Work",direction:"right",icon:"photo_camera"},{name:"Add Video Work",direction:"right",icon:"videocam"}],scope.addPhotoWorkDialog=function(ev){$mdDialog.show({controller:DialogController,contentElement:"#myDialog",parent:angular.element(document.body),targetEvent:ev,clickOutsideToClose:!0,onRemoving:function(){SelectedImages.reset()}})},scope.addVideoWorkDialog=function(ev){$mdDialog.show({controller:DialogController,contentElement:"#addVideoWorkDialog",parent:angular.element(document.body),targetEvent:ev,clickOutsideToClose:!0,onShowing:function(){VideoCoverImage.removeImage()}})}},templateUrl:"modules/bw-interface/client/views/add-work-fab.html"};return directive}angular.module("bw-interface").directive("interfaceCyclerImage",interfaceCyclerImage).directive("addWorkFab",addWorkFab).directive("addPhotoWorkForm",addPhotoWorkForm).directive("uploadPicsModule",uploadPicsModule).directive("imageThumbnail",imageThumbnail).directive("modelsInput",modelsInput).directive("editModelsInput",editModelsInput).directive("editPhotoWorkForm",editPhotoWorkForm).directive("editUploadPicsModule",editUploadPicsModule).directive("editImageThumbnail",editImageThumbnail).directive("addVideoWorkForm",addVideoWorkForm).directive("castInput",castInput).directive("directorInput",directorInput).directive("editorInput",editorInput).directive("uploadCoverImage",uploadCoverImage).directive("coverImageThumbnail",coverImageThumbnail).directive("editVideoWorkForm",editVideoWorkForm).directive("editVideoCoverImage",editVideoCoverImage).directive("editCastInput",editCastInput).directive("editDirectorsInput",editDirectorsInput).directive("editEditorsInput",editEditorsInput).directive("editCoverImageThumbnail",editCoverImageThumbnail).directive("editAboutImage",editAboutImage).directive("editAboutImageThumbnail",editAboutImageThumbnail),interfaceCyclerImage.$inject=["$rootScope","$state","CyclerImages"],addWorkFab.$inject=["$rootScope","$state","$timeout","$mdDialog","CyclerImages","VideoCoverImage","SelectedImages"],addPhotoWorkForm.$inject=["$rootScope","$state","$timeout","$mdDialog"],uploadPicsModule.$inject=["$rootScope","$state","$timeout","$mdDialog","SelectedImages"],imageThumbnail.$inject=["$rootScope","$state","$timeout","$mdDialog","SelectedImages"],modelsInput.$inject=["$rootScope","$state","$timeout","$mdDialog","SelectedImages"],editModelsInput.$inject=["$rootScope","$state","$timeout","$mdDialog","SelectedImages","EditImages"],editPhotoWorkForm.$inject=["$rootScope","$state","$timeout","$mdDialog","SelectedImages","EditImages"],editUploadPicsModule.$inject=["$rootScope","$state","$timeout","$mdDialog","SelectedImages","EditImages"],editImageThumbnail.$inject=["$rootScope","$state","$timeout","$mdDialog","SelectedImages","EditImages"],addVideoWorkForm.$inject=["$rootScope","$state","$timeout","$mdDialog"],castInput.$inject=["$rootScope","$state","$timeout","$mdDialog"],directorInput.$inject=["$rootScope","$state","$timeout","$mdDialog"],editorInput.$inject=["$rootScope","$state","$timeout","$mdDialog"],uploadCoverImage.$inject=["$rootScope","$state","$timeout","$mdDialog","VideoCoverImage"],coverImageThumbnail.$inject=["$rootScope","$state","$timeout","$mdDialog","VideoCoverImage"],editVideoWorkForm.$inject=["$rootScope","$state","$timeout","$mdDialog","VideoCoverImage"],editVideoCoverImage.$inject=["$rootScope","$state","$timeout","$mdDialog","VideoCoverImage"],editCastInput.$inject=["$rootScope","$state","$timeout","$mdDialog","VideoCoverImage"],editDirectorsInput.$inject=["$rootScope","$state","$timeout","$mdDialog","VideoCoverImage"],editEditorsInput.$inject=["$rootScope","$state","$timeout","$mdDialog","VideoCoverImage"],editCoverImageThumbnail.$inject=["$rootScope","$state","$timeout","$mdDialog","VideoCoverImage"],editAboutImage.$inject=["$rootScope","$state","$timeout","$mdDialog","AboutImage"],editAboutImageThumbnail.$inject=["$rootScope","$state","$timeout","$mdDialog","AboutImage"]}(),function(){"use strict";function AboutImage($rootScope,$http,Upload){var service={image:[],newImage:[],removeImage:function(){service.image=[],$rootScope.$broadcast("AboutImage.update")},addImage:function(file){service.image=[],service.newImage=[],service.newImage.push(file),$rootScope.$broadcast("AboutImage.update")}};return service}function VideoCoverImage($rootScope,$http,Upload){var service={image:[],removeImage:function(){service.image=[],console.log("removeCoverImage service function"),console.log("service.image is: ",service.image),$rootScope.$broadcast("VideoCoverImage.update")},addImage:function(file){service.image=[],service.image.push(file),$rootScope.$broadcast("VideoCoverImage.update")}};return service}function NewImages($rootScope,$http,Upload){var service={images:[]};return service}function ServerImages($rootScope,$http,Upload){var service={images:[]
};return service}function EditImages($rootScope,$http,Upload){var service={images:[],serverImages:[],newImages:[],newImageFiles:[],imagesToDelete:[],addNewImage:function(file,imageUrl,serverImage,coverImage){console.log("addNewImage EditImages service function");var imageToPush={imageUrl:imageUrl,serverImage:serverImage,coverImage:coverImage};0===service.images.length&&(imageToPush.coverImage=!0),service.newImages.push(imageToPush),service.images.push(imageToPush),service.newImageFiles.push(file)},reset:function(){service.images=[],service.serverImages=[],service.newImages=[],service.newImageFiles=[],service.imagesToDelete=[]},addImage:function(imageUrl,serverImage,coverImage){console.log("addImage EditImages service function");var imageToPush={imageUrl:imageUrl,serverImage:serverImage,coverImage:coverImage};serverImage===!1?service.newImages.push(imageToPush):service.serverImages.push(imageToPush),service.images.push(imageToPush)},setCoverImage:function(imgUrl){console.log("setCoverImage EditImages: ",imgUrl),console.log("service.images.length: ",service.images.length),console.log("service.images: ",service.images);for(var i=0;i<service.images.length;++i)if(service.images[i].imageUrl===imgUrl){if(console.log("match"),service.images[i].coverImage=!0,service.chosenCoverImage=service.images[i].imageUrl,service.images[i].serverImage===!1)for(var j=0;j<service.newImages.length;++j)service.newImages[j].imageUrl===imgUrl?service.newImages[j].coverImage=!0:service.newImages[j].coverImage=!1}else service.images[i].coverImage=!1},removeImage:function(imgUrl){for(var i=0;i<service.images.length;++i)if(service.images[i].imageUrl===imgUrl){if(service.images[i].coverImage===!0&&service.images.length>1)if(0===i){service.images[1].coverImage=!0;for(var j=0;j<service.serverImages.length;++j)service.serverImages[j].imageUrl===service.images[1].imageUrl&&(console.log("server cover image true"),console.log("j is: ",j),console.log("url: ",service.serverImages[j].imageUrl),service.chosenCoverImage=service.serverImages[j].imageUrl,service.serverImages[j].coverImage=!0);for(var j=0;j<service.newImages.length;++j)service.newImages[j].imageUrl===service.images[1].imageUrl&&(service.chosenCoverImage=service.newImages[j].imageUrl,service.newImages[j].coverImage=!0,service.chosenCoverImage=service.newImages[j].imageUrl)}else{service.images[0].coverImage=!0;for(var j=0;j<service.serverImages.length;++j)service.serverImages[j].imageUrl===service.images[0].imageUrl&&(service.serverImages[j].coverImage=!0,console.log("server cover image true"),console.log("url: ",service.serverImages[j].imageUrl),service.chosenCoverImage=service.serverImages[j].coverImage);for(var j=0;j<service.newImages.length;++j)service.newImages[j].imageUrl===service.images[0].imageUrl&&(service.newImages[j].coverImage=!0,service.chosenCoverImage=service.newImages[j].imageUrl)}if(service.images[i].serverImage===!0){service.imagesToDelete.push(service.images[i]),console.log("imagesToDelete");for(var j=0;j<service.serverImages.length;++j)console.log("checking server images"),service.images[i].imageUrl===service.serverImages[j].imageUrl&&(service.serverImages.splice(j,1),console.log("spliced server image"))}if(service.images[i].serverImage===!1)for(var j=0;j<service.newImages.length;++j)service.newImages[j].imageUrl===imgUrl&&(console.log("spliced"),console.log("service.newImages[j]: ",service.newImages[j]),console.log("service.images[i]: ",service.images[i]),service.newImages.splice(j,1),service.newImageFiles.splice(j,1),console.log("service.newImages after splice: ",service.newImages));console.log("image spliced: ",service.images[i]),service.images.splice(i,1),console.log("service.imagesToDelete: ",service.imagesToDelete)}}};return service}function SelectedImages($rootScope,$http,Upload){var service={images:[],addImage:function(file){console.log("addImage service function");var imageToPush;imageToPush=0===service.images.length?{file:file,coverImage:!0}:{file:file,coverImage:!1},service.images.push(imageToPush),$rootScope.$broadcast("SelectedImages.update")},setCoverImage:function(imgUrl){console.log("setCoverImage()");for(var i=0;i<service.images.length;++i)service.images[i].file.$ngfBlobUrl===imgUrl?service.images[i].coverImage=!0:service.images[i].coverImage=!1;$rootScope.$broadcast("SelectedImages.update")},reset:function(){service.images=[],$rootScope.$broadcast("SelectedImages.update")},removeImage:function(imgUrl){console.log("imgUrl is: "+imgUrl),console.log("service.images: "+JSON.stringify(service.images));for(var i=0;i<service.images.length;++i)service.images[i].file.$ngfBlobUrl===imgUrl&&(service.images[i].coverImage===!0&&service.images.length>1&&(0===i?service.images[1].coverImage=!0:service.images[0].coverImage=!0),service.images.splice(i,1),console.log("imgUrl: "+imgUrl),console.log("service.images: "+service.images),$rootScope.$broadcast("SelectedImages.update"))}};return service}function CyclerImages($rootScope,$http,Upload){var service={images:[],getCyclerImages:function(){$http.get("/api/images/get_cycler_images").then(function(response){console.log("response: "+response),200===response.status&&(service.images=response.data,service.images.forEach(function(image){image.cssClass=!1,service.images[0].cssClass=!0}),$rootScope.$broadcast("images.update"),console.log(images),console.log("JSON stringify: "+JSON.stringify(response)))})},uploadCyclerImage:function(file){console.log("$scope.upload"),console.log("file: "+JSON.stringify(file)),Upload.upload({url:"/api/images/upload_cycler_image",data:{file:file}}).then(function(resp){console.log("Success: "+resp.config.data.file.name+"uploaded. Response: "+resp.data),console.log(JSON.stringify(resp.data)),service.images.push(resp.data),$rootScope.$broadcast("images.update")},function(resp){console.log("Error status:  "+resp.status)},function(evt){var progressPercentage=parseInt(100*evt.loaded/evt.total);null!==evt.config.data.file&&console.log("progress: "+progressPercentage+"% "+evt.config.data.file.name)})},deleteCyclerImage:function(imagePath){console.log("$scope.deleteImage"),console.log("imagePath: "+imagePath),$http["delete"]("/api/images/delete_cycler_image",{params:{imagePath:imagePath}}).then(function(response){if(console.log("response: "+JSON.stringify(response)),200===response.status)for(var i=0;i<service.images.length;++i)service.images[i].path===imagePath&&(service.images.splice(i,1),$rootScope.$broadcast("images.update"))})}};return service}angular.module("bw-interface").service("CyclerImages",CyclerImages).service("SelectedImages",SelectedImages).service("ServerImages",ServerImages).service("NewImages",NewImages).service("EditImages",EditImages).service("VideoCoverImage",VideoCoverImage).service("AboutImage",AboutImage),CyclerImages.$inject=["$rootScope","$http","Upload"],SelectedImages.$inject=["$rootScope","$http","Upload"],ServerImages.$inject=["$rootScope","$http","Upload"],NewImages.$inject=["$rootScope","$http","Upload"],EditImages.$inject=["$rootScope","$http","Upload"],VideoCoverImage.$inject=["$rootScope","$http","Upload"],AboutImage.$inject=["$rootScope","$http","Upload"]}(),function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Chat",state:"chat"})}angular.module("chat").run(menuConfig),menuConfig.$inject=["menuService"]}(),function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/client/views/chat.client.view.html",controller:"ChatController",controllerAs:"vm",data:{roles:["user","admin"],pageTitle:"Chat"}})}angular.module("chat.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}(),function(){"use strict";function ChatController($scope,$state,Authentication,Socket){function init(){Authentication.user||$state.go("home"),Socket.socket||Socket.connect(),Socket.on("chatMessage",function(message){vm.messages.unshift(message)}),$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}function sendMessage(){var message={text:vm.messageText};Socket.emit("chatMessage",message),vm.messageText=""}var vm=this;vm.messages=[],vm.messageText="",vm.sendMessage=sendMessage,init()}angular.module("chat").controller("ChatController",ChatController),ChatController.$inject=["$scope","$state","Authentication","Socket"]}(),function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}angular.module("core.admin").run(menuConfig),menuConfig.$inject=["menuService"]}(),function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}angular.module("core.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}(),function(){"use strict";function menuConfig(menuService){menuService.addMenu("account",{roles:["user"]}),menuService.addMenuItem("account",{title:"",state:"settings",type:"dropdown",roles:["user"]}),menuService.addSubMenuItem("account","settings",{title:"Edit Profile",state:"settings.profile"}),menuService.addSubMenuItem("account","settings",{title:"Edit Profile Picture",state:"settings.picture"}),menuService.addSubMenuItem("account","settings",{title:"Change Password",state:"settings.password"}),menuService.addSubMenuItem("account","settings",{title:"Manage Social Accounts",state:"settings.accounts"})}angular.module("core").run(menuConfig),menuConfig.$inject=["menuService"]}(),function(){"use strict";function routeFilter($rootScope,$state,Authentication){function stateChangeStart(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){for(var allowed=!1,i=0,roles=toState.data.roles;i<roles.length;i++)if("guest"===roles[i]||Authentication.user&&void 0!==Authentication.user.roles&&Authentication.user.roles.indexOf(roles[i])!==-1){allowed=!0;break}allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.transitionTo("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}function stateChangeSuccess(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)}function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",stateChangeStart),$rootScope.$on("$stateChangeSuccess",stateChangeSuccess)}angular.module("core").run(routeFilter),routeFilter.$inject=["$rootScope","$state","Authentication"]}(),function(){"use strict";function routeConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.rule(function($injector,$location){var path=$location.path(),hasTrailingSlash=path.length>1&&"/"===path[path.length-1];if(hasTrailingSlash){var newPath=path.substr(0,path.length-1);$location.replace().path(newPath)}}),$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",cache:!1,templateUrl:"modules/core/client/views/home.client.view.html",controller:"HomeController",controllerAs:"vm"}).state("about",{url:"/about",templateUrl:"modules/core/client/views/about.client.view.html",controller:"AboutController"}).state("bw-interface",{url:"/bw/interface",templateUrl:"modules/bw-interface/client/views/bw-interface.client.view.html",data:{roles:["user","admin"],pageTitle:"Interface"}}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0,pageTitle:"Not-Found"}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0,pageTitle:"Bad-Request"}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0,pageTitle:"Forbidden"}})}angular.module("core.routes").config(routeConfig),routeConfig.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function AboutController($state,$rootScope,$scope,$http){}angular.module("core").controller("AboutController",AboutController),AboutController.$inject=["$state","$rootScope","$scope","$http"]}(),function(){"use strict";function HeaderController($scope,$state,Authentication,menuService){function stateChangeSuccess(){vm.isCollapsed=!1}var vm=this;vm.accountMenu=menuService.getMenu("account").items[0],vm.authentication=Authentication,vm.isCollapsed=!1,vm.menu=menuService.getMenu("topbar"),$scope.$on("$stateChangeSuccess",stateChangeSuccess)}angular.module("core").controller("HeaderController",HeaderController),HeaderController.$inject=["$scope","$state","Authentication","menuService"]}(),function(){"use strict";function HomeController($scope,$rootScope,$state,Upload,$mdDialog,$mdToast,$http,AboutPageService,$ngAnimate){function sanitizePosition(){var current=$scope.toastPosition;current.bottom&&last.top&&(current.top=!1),current.top&&last.bottom&&(current.bottom=!1),current.right&&last.left&&(current.left=!1),current.left&&last.right&&(current.right=!1),last=angular.extend({},current)}var last={bottom:!1,top:!0,left:!1,right:!0};$scope.toastPosition=angular.extend({},last),$scope.getToastPosition=function(){return sanitizePosition(),Object.keys($scope.toastPosition).filter(function(pos){return $scope.toastPosition[pos]}).join(" ")},$scope.showSimpleToast=function(msg){var pinTo=$scope.getToastPosition();switch(msg){case"success":return void $mdToast.show($mdToast.simple().textContent("Message sent.").position(pinTo).hideDelay(2e3));case"email":return void $mdToast.show($mdToast.simple().textContent("Please enter your email address.").position(pinTo).hideDelay(2e3).parent(angular.element(document.querySelector("#contact-form-dialog"))));case"name":return void $mdToast.show($mdToast.simple().textContent("Please enter your name.").position(pinTo).hideDelay(2e3).parent(angular.element(document.querySelector("#contact-form-dialog"))));case"message":return void $mdToast.show($mdToast.simple().textContent("Please enter a message.").position(pinTo).hideDelay(2e3).parent(angular.element(document.querySelector("#contact-form-dialog"))));case"message-length":return void $mdToast.show($mdToast.simple().textContent("Message must be less than 1000 characters.").position(pinTo).hideDelay(2e3).parent(angular.element(document.querySelector("#contact-form-dialog"))))}};$scope.messageSent=!1,$scope.show=!1,$scope.contact=function(ev){console.log("scope.contact"),$mdDialog.show({controller:["scope",function(scope){scope.messageSent=!1,scope.message="",scope.subject="",scope.senderEmail="",scope.senderName="",scope.senderPhoneNumber="",scope.isDisabled=!1,scope.submitButtonStyle={visibility:"visible"},scope.submitProgressStyle={visibility:"hidden"},scope.sendEmail=function(){if(scope.isDisabled=!0,scope.submitProgressStyle.visibility="visible",scope.submitButtonStyle.visibility="hidden",console.log("message is: ",scope.message),console.log("subject is: ",scope.subject),console.log("senderEmail is: ",scope.senderEmail),console.log("senderPhoneNumber is: ",scope.senderPhoneNumber),console.log("senderName is: ",scope.senderName),""===scope.senderEmail||"undefined"==typeof scope.senderEmail)return $scope.showSimpleToast("email"),scope.submitProgressStyle.visibility="hidden",scope.submitButtonStyle.visibility="visible",void(scope.isDisabled=!1);if(""===scope.senderName||"undefined"==typeof scope.senderName)return $scope.showSimpleToast("name"),scope.submitProgressStyle.visibility="hidden",scope.submitButtonStyle.visibility="visible",void(scope.isDisabled=!1);if(""===scope.message||"undefined"==typeof scope.message)return $scope.showSimpleToast("message"),scope.submitProgressStyle.visibility="hidden",scope.submitButtonStyle.visibility="visible",void(scope.isDisabled=!1);scope.message.length>1e3&&($scope.showSimpleToast("message-length"),scope.submitProgressStyle.visibility="hidden",scope.submitButtonStyle.visibility="visible",scope.isDisabled=!1);var emailObject={message:scope.message,subject:scope.subject,senderEmail:scope.senderEmail,senderName:scope.senderName,senderPhoneNumber:scope.senderPhoneNumber};$http.post("/api/email/send_email",emailObject).then(function(resp){200===resp.status?(console.log("successfully sent email!"),scope.submitProgressStyle.visibility="hidden",scope.submitButtonStyle.visibility="visible",scope.isDisabled=!1,scope.messageSent=!0,$mdDialog.hide()):console.log("error sending email")})},$rootScope.hide=function(){$mdDialog.hide()},scope.cancel=function(){$mdDialog.cancel()},$rootScope.answer=function(answer){$mdDialog.hide(answer)}}],templateUrl:"modules/core/client/views/contact-form.html",parent:angular.element(document.body),clickOutsideToClose:!1,fullscreen:!1,preserveScope:!0,scope:$scope,locals:{},onRemoving:function(){$scope.messageSent&&$scope.showSimpleToast("success")},targetEvent:ev})},$scope.about=function(){$state.go("about")},$scope.getAboutPage=function(){AboutPageService.getAbout()},$scope.sendEmail=function(){},$scope.goHome=function(){window.location.href="/"},$scope.$on("AboutPageService.update",function(){$scope.aboutObject=AboutPageService.about,console.log("update aboutpageservice"),console.log("$scope.aboutObject: ",$scope.aboutObject),$scope.show=!0})}angular.module("core").controller("HomeController",HomeController),HomeController.$inject=["$scope","$rootScope","$state","Upload","$mdDialog","$mdToast","$http","AboutPageService"]}(),function(){"use strict";function pageTitle($rootScope,$timeout,$interpolate,$state){function link(scope,element){function listener(event,toState){var title=getTitle($state.$current);$timeout(function(){element.text(title)},0,!1)}function getTitle(currentState){var applicationCoreTitle="Blackwashed",workingState=currentState;if(currentState.data){workingState="undefined"!=typeof workingState.locals?workingState.locals.globals:workingState;var stateTitle=$interpolate(currentState.data.pageTitle)(workingState);return applicationCoreTitle+" - "+stateTitle}return applicationCoreTitle}$rootScope.$on("$stateChangeSuccess",listener)}var directive={restrict:"A",link:link};return directive}angular.module("core").directive("pageTitle",pageTitle),pageTitle.$inject=["$rootScope","$timeout","$interpolate","$state"]}(),function(){"use strict";function showErrors($timeout,$interpolate){function compile(elem,attrs){function linkFn(scope,el,attrs,formCtrl){function checkValidity(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)}function reset(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)}function toggleClasses(invalid){if(el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess)return el.toggleClass("has-success",showValidationMessages&&!invalid)}var inputEl,inputName,inputNgEl,options,showSuccess,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw new Error("show-errors element has no child input elements with a 'name' attribute class");scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},toggleClasses),scope.$on("show-errors-check-validity",checkValidity),scope.$on("show-errors-reset",reset)}if(attrs.showErrors.indexOf("skipFormGroupCheck")===-1&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw new Error("show-errors element does not have the 'form-group' or 'input-group' class");return linkFn}var directive={restrict:"A",require:"^form",compile:compile};return directive}angular.module("core").directive("showErrors",showErrors),showErrors.$inject=["$timeout","$interpolate"]}(),function(){"use strict";function authInterceptor($q,$injector,Authentication){function responseError(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:Authentication.user=null,$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}var service={responseError:responseError};return service}angular.module("core").factory("authInterceptor",authInterceptor),authInterceptor.$inject=["$q","$injector","Authentication"]}(),function(){"use strict";function menuService(){function addMenu(menuId,options){return options=options||{},service.menus[menuId]={roles:options.roles||service.defaultRoles,items:options.items||[],shouldRender:shouldRender},service.menus[menuId]}function addMenuItem(menuId,options){if(options=options||{},service.validateMenuExistence(menuId),service.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?service.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)options.items.hasOwnProperty(i)&&service.addSubMenuItem(menuId,options.state,options.items[i]);return service.menus[menuId]}function addSubMenuItem(menuId,parentItemState,options){options=options||{},service.validateMenuExistence(menuId);for(var itemIndex in service.menus[menuId].items)service.menus[menuId].items[itemIndex].state===parentItemState&&service.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?service.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return service.menus[menuId]}function getMenu(menuId){return service.validateMenuExistence(menuId),service.menus[menuId]}function init(){shouldRender=function(user){if(this.roles.indexOf("*")!==-1)return!0;if(!user)return!1;for(var userRoleIndex in user.roles)if(user.roles.hasOwnProperty(userRoleIndex))for(var roleIndex in this.roles)if(this.roles.hasOwnProperty(roleIndex)&&this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1},addMenu("topbar",{roles:["*"]})}function removeMenu(menuId){service.validateMenuExistence(menuId),delete service.menus[menuId]}function removeMenuItem(menuId,menuItemState){service.validateMenuExistence(menuId);for(var itemIndex in service.menus[menuId].items)service.menus[menuId].items.hasOwnProperty(itemIndex)&&service.menus[menuId].items[itemIndex].state===menuItemState&&service.menus[menuId].items.splice(itemIndex,1);return service.menus[menuId]}function removeSubMenuItem(menuId,submenuItemState){service.validateMenuExistence(menuId);for(var itemIndex in service.menus[menuId].items)if(this.menus[menuId].items.hasOwnProperty(itemIndex))for(var subitemIndex in service.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items.hasOwnProperty(subitemIndex)&&service.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&service.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return service.menus[menuId]}function validateMenuExistence(menuId){if(menuId&&menuId.length){if(service.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")}var shouldRender,service={addMenu:addMenu,addMenuItem:addMenuItem,addSubMenuItem:addSubMenuItem,defaultRoles:["user","admin"],getMenu:getMenu,menus:{},removeMenu:removeMenu,removeMenuItem:removeMenuItem,removeSubMenuItem:removeSubMenuItem,validateMenuExistence:validateMenuExistence};return init(),service}angular.module("core").factory("menuService",menuService)}(),function(){"use strict";function Socket(Authentication,$state,$timeout){function connect(){Authentication.user&&(service.socket=io())}function emit(eventName,data){service.socket&&service.socket.emit(eventName,data)}function on(eventName,callback){service.socket&&service.socket.on(eventName,function(data){$timeout(function(){callback(data)})})}function removeListener(eventName){service.socket&&service.socket.removeListener(eventName)}var service={connect:connect,emit:emit,on:on,removeListener:removeListener,socket:null};return connect(),service}angular.module("core").factory("Socket",Socket),Socket.$inject=["Authentication","$state","$timeout"]}(),function(){"use strict";function SliderController($scope,$rootScope,$http,CyclerImages,$ngAnimate){$scope.loadedBool=!1,$scope.onLoaded={},CyclerImages.getCyclerImages(),$scope.getCyclerImages=function(){console.log("service: "+CyclerImages)},angular.element(document).ready(function($scope){console.log("READY")}),$scope.$on("images.update",function(event){var temp=CyclerImages.images;$scope.loadedBool=!0,$scope.cyclerImages=temp}),$scope.images=[{the_src:"modules/cycler/client/img/slideshow_1.jpg",title:"Pic 1"},{the_src:"modules/cycler/client/img/slideshow_2.jpg",title:"Pic 2"},{the_src:"modules/cycler/client/img/slideshow_3.jpg",title:"Pic 3"},{the_src:"modules/cycler/client/img/slideshow_5.jpg",title:"Pic 4"}]}angular.module("cycler",["ngMaterial","ngAnimate"]).controller("SliderController",SliderController),SliderController.$inject=["$scope","$rootScope","$http","CyclerImages"]}(),function(){"use strict";function individualImage($rootScope,$timeout,$interpolate,$state,$animate){var directive={restrict:"E",scope:{image:"="},link:function(scope,elem,attrs){}};return directive}function imageSlider($rootScope,$timeout,$interpolate,$state,$animate){var directive={restrict:"E",replace:!0,scope:{images:"="},link:function(scope,elem,attrs){scope.currentIndex=0,elem.on("load",function(){scope.currentIndex=-1,scope.currentIndex++,console.log("READY LOAD")}),$rootScope.$on("$viewContentLoaded",function(){console.log("READY view view"),$rootScope.onLoaded=!0,scope.currentIndex=0,scope.justLoaded=!0}),"undefined"!=typeof scope.images&&(scope.images[0].cssClass=!0),scope.justLoaded=!0,scope.next=function(click){elem[0].childNodes[1].children[0].children;"undefined"!=typeof scope.images&&(1===scope.images.length?(scope.currentIndex=0,scope.images[0].cssClass=!0):(scope.currentIndex<scope.images.length-1?scope.currentIndex++:scope.currentIndex=0,"yes-click"===click&&(console.log("timer is: ",timer),$timeout.cancel(timer),sliderFunc())))},scope.prev=function(){scope.currentIndex>0?scope.currentIndex--:scope.currentIndex=scope.images.length-1,$timeout.cancel(timer),sliderFunc()},scope.defaultClass="slide",scope.$watch("currentIndex",function(){if("undefined"!=typeof scope.images){for(var i=scope.images.length-1;i>=0;--i)scope.images[i].cssClass=!1;scope.images[scope.currentIndex].cssClass=!0,console.log("scope.images[0].cssClass: ",scope.images[0].cssClass)}});var timer,sliderFunc=function(){timer=$timeout(function(){scope.next("no_click"),sliderFunc()},5e3)};timer=$timeout(function(){sliderFunc()},500),scope.$on("$destroy",function(){console.log("destroy"),$timeout.cancel(timer)})},templateUrl:"modules/cycler/client/views/image-slider.html"};return directive}angular.module("cycler").directive("imageSlider",imageSlider).directive("individualImage",individualImage),individualImage.$inject=["$rootScope","$timeout","$interpolate","$state","$animate"],imageSlider.$inject=["$rootScope","$timeout","$interpolate","$state","$animate"]}(),function(){"use strict";function PhotoWorksController($scope,$rootScope,Upload,$mdDialog,$mdToast,$http,CyclerImages,SelectedImages,PhotoWorks){$scope.$on("photoWorks.update",function(event){$scope.photoWorks=PhotoWorks.photoWorks})}angular.module("photoWorks").controller(PhotoWorksController),PhotoWorksController.$inject=["$scope","$rootScope","Upload","$mdDialog","$mdToast","$http","CyclerImages","SelectedImages","PhotoWorks"]}(),function(){"use strict";function workImage($rootScope,$state,$timeout,$mdDialog,$mdMedia,SelectedImages,PhotoWorks){var directive={restrict:"E",scope:{imageUrl:"="},link:function(scope){},templateUrl:"modules/photo-works/client/views/work-image.html"};return directive}function viewPhotoWork($rootScope,$state,$timeout,$mdDialog,$mdMedia,SelectedImages,PhotoWorks){var directive={restrict:"E",scope:{photoWork:"="},link:function(scope){},templateUrl:"modules/photo-works/client/views/view-photo-work.html"};return directive}function photoWork($rootScope,$http,$mdDialog,$mdMedia,$mdToast,PhotoWorks,VideoWorks,EditImages,Upload){var directive={restrict:"E",scope:{coverImageUrl:"=",work:"="},link:function(scope,elem,attr){scope.coverImage=PhotoWorks.coverImage,scope.customFullscreen=$mdMedia("xs")||$mdMedia("sm"),scope.editPhotoWork=function(work){console.log("work is: ",work),EditImages.images=[],EditImages.newImages=[],EditImages.imagesToDelete=[],EditImages.newImageFiles=[],EditImages.serverImages=[],EditImages.chosenCoverImage="";for(var i=0;i<work.images.length;++i)console.log("work.images[i]: ",work.images[i]),work.images[i].coverImage===!0&&(EditImages.chosenCoverImage=work.images[i].imageUrl),EditImages.addImage(work.images[i].imageUrl,!0,work.images[i].coverImage);scope.modelsModel=[];for(var i=0;i<work.models.length;++i)console.log("work.models[i]: ",work.models[i]),scope.modelsModel.push({name:"model_"+i}),scope.modelNumber=i;$mdDialog.show({locals:{work:scope.work,models:scope.work.models,modelsModel:scope.modelsModel,modelNumber:scope.modelNumber},controller:["$scope","$rootScope","$mdDialog","$mdToast","work","modelsModel","modelNumber","models",function($scope,$rootScope,$mdDialog,$mdToast,work,modelsModel,modelNumber,models){function sanitizePosition(){var current=$scope.toastPosition;current.bottom&&last.top&&(current.top=!1),current.top&&last.bottom&&(current.bottom=!1),current.right&&last.left&&(current.left=!1),current.left&&last.right&&(current.right=!1),last=angular.extend({},current)}var last={bottom:!1,top:!0,left:!1,right:!0};$scope.toastPosition=angular.extend({},last),$scope.bwUploadingEdit={visibility:"hidden"},$scope.getToastPosition=function(){return sanitizePosition(),Object.keys($scope.toastPosition).filter(function(pos){return $scope.toastPosition[pos]}).join(" ")},$scope.showSimpleToast=function(error){var pinTo=$scope.getToastPosition();"images"===error?$mdToast.show($mdToast.simple().textContent("Please add at least one image.").position(pinTo).hideDelay(3e3).parent($mdDialog)):"title"===error?$mdToast.show($mdToast.simple().textContent("Another work with that title already exists.").position(pinTo).hideDelay(3e3)):"video-image"===error?$mdToast.show($mdToast.simple().textContent("Please add a cover image.").position(pinTo).hideDelay(3e3)):"missing-title"===error?$mdToast.show($mdToast.simple().textContent("Please add a title.").position(pinTo).hideDelay(3e3)):"video-url"===error&&$mdToast.show($mdToast.simple().textContent("Please add a video URL.").position(pinTo).hideDelay(3e3))},$scope.work=work,$scope.models=models,$scope.modelsModel=modelsModel;var oldModels=$scope.work.models,workTitle=$scope.work.title,postText=$scope.work.postText,copyright=$scope.work.copyright;$scope.addModel=function(event){$scope.modelsModel.push({name:"model_"+ ++modelNumber})},$scope.cancelEdit=function(event){work.title=workTitle,work.copyright=copyright,work.models=oldModels,work.postText=postText,$scope.modelsModel=model;for(var model in work.models)""===work.models[model]&&work.models.splice(model,1);for(model in modelsModel)""===modelsModel[model]&&modelsModel.splice(i,1);$mdDialog.hide()},$scope.submitEditedWork=function(event){if(0===EditImages.images.length)return void $scope.showSimpleToast("images");if(""===work.title)return void $scope.showSimpleToast("missing-title");for(var i=0;i<PhotoWorks.photoWorks.length;++i)if(PhotoWorks.photoWorks[i].title===$scope.photoWorkTitle)return void $scope.showSimpleToast("title");
for(var i=0;i<VideoWorks.videoWorks.length;++i)if(VideoWorks.videoWorks[i].title===$scope.photoWorkTitle)return void $scope.showSimpleToast("title");for(var i=0;i<work.models.length;++i)(""===work.models[i]||work.models[i].match(/^\s*$/))&&(work.models.splice(i,1),i=0);console.log("submit edited work"),console.log("work.models: ",work.models),console.log("work.title: ",work.title),console.log("work.postText: ",work.postText),console.log("EditImages.chosenCoverImage: ",EditImages.chosenCoverImage),console.log("EditImages.images: ",EditImages.images),console.log("EditImages.newImages: ",EditImages.newImages),console.log("EditImages.imagesToDelete: ",EditImages.imagesToDelete);var editObject={newImages:EditImages.newImages,chosenCoverImage:EditImages.chosenCoverImage,identifier:work._id,serverImages:EditImages.serverImages,imagesToDelete:EditImages.imagesToDelete,workTitle:work.title,postText:work.postText,copyright:work.copyright,models:work.models};EditImages.newImageFiles.length>0&&($scope.bwUploadingEdit={visibility:"visible"}),Upload.upload({url:"/api/photo_works/edit_photo_work",arrayKey:"",data:{file:EditImages.newImageFiles,editObject:JSON.stringify(editObject)}}).then(function(resp){console.log("Success: ",resp);for(var newWork=resp.data,i=0;i<PhotoWorks.photoWorks.length;++i)PhotoWorks.photoWorks[i]._id===newWork._id&&(PhotoWorks.photoWorks[i]=newWork);$mdDialog.cancel(),EditImages.reset()},function(resp){console.log("error status: ",resp.status)},function(evt){console.log("evt: ",evt),$scope.uploadProgress=evt.loaded/evt.total*100})},$scope.editSelected=function(files,badFiles){},$scope.hide=function(){$mdDialog.hide()}}],controllerAs:"editCtrl",onRemoving:function(){EditImages.reset()},clickOutsideToClose:!0,templateUrl:"modules/bw-interface/client/views/edit-photo-work.html"})},scope.deletePhotoWork=function(ev){console.log("scope.work: ",scope.work),PhotoWorks.deletePhotoWork(scope.work)},scope.showPhotoWork=function(ev){console.log("showPhotoWork()");var useFullScreen=($mdMedia("sm")||$mdMedia("xs"))&&scope.customFullscreen;console.log(scope.work),$rootScope.currentWork=scope.work,$mdDialog.show({controller:["scope","$mdDialog","work",function(scope,$mdDialog,work){scope.work=work,scope.viewImage=function(event,imageUrl){console.log("viewImage"),console.log("imageUrl: ",imageUrl),$mdDialog.show({controllerAs:"ViewImageController",controller:["$mdDialog","scope","work",function($mdDialog,scope,work){console.log("imageUrl controller: ",imageUrl),scope.imageUrl=imageUrl,scope.closeDialog=function(){$mdDialog.cancel()}}],preserveScope:!0,autoWrap:!0,skipHide:!0,clickOutsideToClose:!0,locals:{work:scope.work},template:'<md-dialog class="view-image-dialog" aria-label="viewImageLabel"><span flex><md-button ng-click="closeDialog()" layout-align="end center" class="md-warn md-hue-2 md-fab md-mini view-image-close"><md-icon>close</md-icon></md-button></span><img class="view-image-img" ng-src="{{imageUrl}}"/></md-dialog>'})},$rootScope.hide=function(){$mdDialog.hide()},scope.cancel=function(){console.log("cancel"),$mdDialog.cancel()},$rootScope.answer=function(answer){$mdDialog.hide(answer)}}],locals:{work:scope.work},templateUrl:"modules/photo-works/client/views/view-photo-work.html",parent:angular.element(document.body),targetEvent:ev,autoWrap:!1,clickOutsideToClose:!0,fullscreen:useFullScreen})}},templateUrl:"modules/photo-works/client/views/photo-work.html"};return directive}angular.module("photoWorks").directive("photoWork",photoWork).directive("viewPhotoWork",viewPhotoWork).directive("workImage",workImage),photoWork.$inject=["$rootScope","$http","$mdDialog","$mdMedia","$mdToast","PhotoWorks","VideoWorks","EditImages","Upload"],viewPhotoWork.$inject=["$rootScope","$state","$timeout","$mdDialog","$mdMedia","SelectedImages","PhotoWorks"],workImage.$inject=["$rootScope","$state","$timeout","$mdDialog","$mdMedia","SelectedImages","PhotoWorks"]}(),function(){"use strict";function PhotoWorks($rootScope,$http){var service={photoWorks:[],getPhotoWorks:function(){$http.get("api/photo_works/get_photo_works").then(function(response){200===response.status&&(console.log("response.data photo works: "+JSON.stringify(response.data)),service.photoWorks=response.data,console.log(service.photoWorks),$rootScope.$broadcast("photoWorks.update"))})},deletePhotoWork:function(work){console.log("work is: ",work),$http["delete"]("api/photo_works/delete_photo_work",{params:{data:work}}).then(function(response){if(200===response.status)for(var i=0;i<service.photoWorks.length;++i)service.photoWorks[i]._id===work._id&&(service.photoWorks.splice(i,1),$rootScope.$broadcast("photoWorks.update"))})},addPhotoWork:function(work){service.photoWorks.push(work),$rootScope.$broadcast("photoWorks.update")}};return service}angular.module("photoWorks").service("PhotoWorks",PhotoWorks),PhotoWorks.$inject=["$rootScope","$http"]}(),function(){"use strict";function menuConfig(menuService){menuService.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}angular.module("users.admin").run(menuConfig),menuConfig.$inject=["menuService"]}(),function(){"use strict";function routeConfig($stateProvider){function getUser($stateParams,AdminService){return AdminService.get({userId:$stateParams.userId}).$promise}$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController",controllerAs:"vm",data:{pageTitle:"Users List"}}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:getUser},data:{pageTitle:"Edit {{ userResolve.displayName }}"}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:getUser},data:{pageTitle:"Edit User {{ userResolve.displayName }}"}}),getUser.$inject=["$stateParams","AdminService"]}angular.module("users.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}(),function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",controller:"SettingsController",controllerAs:"vm",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html",controller:"EditProfileController",controllerAs:"vm",data:{pageTitle:"Settings"}}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html",controller:"ChangePasswordController",controllerAs:"vm",data:{pageTitle:"Settings password"}}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html",controller:"SocialAccountsController",controllerAs:"vm",data:{pageTitle:"Settings accounts"}}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html",controller:"ChangeProfilePictureController",controllerAs:"vm",data:{pageTitle:"Settings picture"}}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html",controller:"AuthenticationController",controllerAs:"vm"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signup"}}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signin"}}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password forgot"}}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html",data:{pageTitle:"Password reset invalid"}}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html",data:{pageTitle:"Password reset success"}}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password reset form"}})}angular.module("users.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}(),function(){"use strict";function UserListController($scope,$filter,AdminService){function buildPager(){vm.pagedItems=[],vm.itemsPerPage=15,vm.currentPage=1,vm.figureOutItemsToDisplay()}function figureOutItemsToDisplay(){vm.filteredItems=$filter("filter")(vm.users,{$:vm.search}),vm.filterLength=vm.filteredItems.length;var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)}function pageChanged(){vm.figureOutItemsToDisplay()}var vm=this;vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,AdminService.query(function(data){vm.users=data,vm.buildPager()})}angular.module("users.admin").controller("UserListController",UserListController),UserListController.$inject=["$scope","$filter","AdminService"]}(),function(){"use strict";function UserController($scope,$state,$window,Authentication,user){function remove(user){$window.confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),vm.users.splice(vm.users.indexOf(user),1)):vm.user.$remove(function(){$state.go("admin.users")}))}function update(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;var user=vm.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){vm.error=errorResponse.data.message})}var vm=this;vm.authentication=Authentication,vm.user=user,vm.remove=remove,vm.update=update}angular.module("users.admin").controller("UserController",UserController),UserController.$inject=["$scope","$state","$window","Authentication","userResolve"]}(),function(){"use strict";function AuthenticationController($scope,$state,$http,$location,$window,$mdToast,Authentication,PasswordValidator){function sanitizePosition(){var current=$scope.toastPosition;current.bottom&&last.top&&(current.top=!1),current.top&&last.bottom&&(current.bottom=!1),current.right&&last.left&&(current.left=!1),current.left&&last.right&&(current.right=!1),last=angular.extend({},current)}function signup(isValid){return vm.credentials.password!=vm.credentials.confirmPassword?void $scope.showSimpleToast("mismatch"):(vm.error=null,isValid?(vm.credentials.roles="admin",void $http.post("/api/auth/signup",vm.credentials).success(function(response){vm.authentication.user=response,$state.go("bw-interface")}).error(function(response){vm.error=response.message})):($scope.$broadcast("show-errors-check-validity","vm.userForm"),!1))}function signin(isValid){return vm.error=null,isValid?void $http.post("/api/auth/signin",vm.credentials).success(function(response){vm.authentication.user=response,$state.go("bw-interface")}).error(function(response){vm.error=response.message}):($scope.$broadcast("show-errors-check-validity","vm.userForm"),!1)}function callOauthProvider(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}var vm=this;vm.authentication=Authentication,vm.getPopoverMsg=PasswordValidator.getPopoverMsg,vm.signup=signup,vm.signin=signin,vm.callOauthProvider=callOauthProvider,vm.showTip=!1,vm.passwordTooltip={showToolTip:vm.showTip,tipDirection:"bottom",delayTooltip:300};var last={bottom:!1,top:!0,left:!1,right:!0};$scope.toastPosition=angular.extend({},last),$scope.getToastPosition=function(){return sanitizePosition(),Object.keys($scope.toastPosition).filter(function(pos){return $scope.toastPosition[pos]}).join(" ")},$scope.showSimpleToast=function(error){var pinTo=$scope.getToastPosition();"mismatch"===error&&$mdToast.show($mdToast.simple().textContent("Passwords do not match.").position(pinTo).hideDelay(3e3))},vm.error=$location.search().err,vm.authentication.user&&$location.path("/")}angular.module("users").controller("AuthenticationController",AuthenticationController),AuthenticationController.$inject=["$scope","$state","$http","$location","$window","$mdToast","Authentication","PasswordValidator"]}(),function(){"use strict";function PasswordController($scope,$stateParams,$http,$location,Authentication,PasswordValidator){function askForPasswordReset(isValid){return vm.success=vm.error=null,isValid?void $http.post("/api/auth/forgot",vm.credentials).success(function(response){vm.credentials=null,vm.success=response.message}).error(function(response){vm.credentials=null,vm.error=response.message}):($scope.$broadcast("show-errors-check-validity","vm.forgotPasswordForm"),!1)}function resetUserPassword(isValid){return vm.success=vm.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,vm.passwordDetails).success(function(response){vm.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){vm.error=response.message}):($scope.$broadcast("show-errors-check-validity","vm.resetPasswordForm"),!1)}var vm=this;vm.resetUserPassword=resetUserPassword,vm.askForPasswordReset=askForPasswordReset,vm.authentication=Authentication,vm.getPopoverMsg=PasswordValidator.getPopoverMsg,vm.authentication.user&&$location.path("/")}angular.module("users").controller("PasswordController",PasswordController),PasswordController.$inject=["$scope","$stateParams","$http","$location","Authentication","PasswordValidator"]}(),function(){"use strict";function ChangePasswordController($scope,$http,Authentication,PasswordValidator){function changeUserPassword(isValid){return vm.success=vm.error=null,isValid?void $http.post("/api/users/password",vm.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","vm.passwordForm"),vm.success=!0,vm.passwordDetails=null}).error(function(response){vm.error=response.message}):($scope.$broadcast("show-errors-check-validity","vm.passwordForm"),!1)}var vm=this;vm.user=Authentication.user,vm.changeUserPassword=changeUserPassword,vm.getPopoverMsg=PasswordValidator.getPopoverMsg}angular.module("users").controller("ChangePasswordController",ChangePasswordController),ChangePasswordController.$inject=["$scope","$http","Authentication","PasswordValidator"]}(),function(){"use strict";function ChangeProfilePictureController($scope,$timeout,$window,Authentication,FileUploader){function onAfterAddingFile(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){vm.imageURL=fileReaderEvent.target.result},0)}}}function onSuccessItem(fileItem,response,status,headers){vm.success=!0,vm.user=Authentication.user=response,cancelUpload()}function onErrorItem(fileItem,response,status,headers){cancelUpload(),vm.error=response.message}function uploadProfilePicture(){vm.success=vm.error=null,vm.uploader.uploadAll()}function cancelUpload(){vm.uploader.clearQueue(),vm.imageURL=vm.user.profileImageURL}var vm=this;vm.user=Authentication.user,vm.imageURL=vm.user.profileImageURL,vm.uploadProfilePicture=uploadProfilePicture,vm.cancelUpload=cancelUpload,vm.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture",onAfterAddingFile:onAfterAddingFile,onSuccessItem:onSuccessItem,onErrorItem:onErrorItem}),vm.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return"|jpg|png|jpeg|bmp|gif|".indexOf(type)!==-1}})}angular.module("users").controller("ChangeProfilePictureController",ChangeProfilePictureController),ChangeProfilePictureController.$inject=["$scope","$timeout","$window","Authentication","FileUploader"]}(),function(){"use strict";function EditProfileController($scope,$http,$location,UsersService,Authentication){function updateUserProfile(isValid){if(vm.success=vm.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;var user=new UsersService(vm.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","vm.userForm"),vm.success=!0,Authentication.user=response},function(response){vm.error=response.data.message})}var vm=this;vm.user=Authentication.user,vm.updateUserProfile=updateUserProfile}angular.module("users").controller("EditProfileController",EditProfileController),EditProfileController.$inject=["$scope","$http","$location","UsersService","Authentication"]}(),function(){"use strict";function SocialAccountsController($scope,$http,Authentication){function hasConnectedAdditionalSocialAccounts(){return $scope.user.additionalProvidersData&&Object.keys($scope.user.additionalProvidersData).length}function isConnectedSocialAccount(provider){return vm.user.provider===provider||vm.user.additionalProvidersData&&vm.user.additionalProvidersData[provider]}function removeUserSocialAccount(provider){vm.success=vm.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){vm.success=!0,vm.user=Authentication.user=response}).error(function(response){vm.error=response.message})}var vm=this;vm.user=Authentication.user,vm.hasConnectedAdditionalSocialAccounts=hasConnectedAdditionalSocialAccounts,vm.isConnectedSocialAccount=isConnectedSocialAccount,vm.removeUserSocialAccount=removeUserSocialAccount}angular.module("users").controller("SocialAccountsController",SocialAccountsController),SocialAccountsController.$inject=["$scope","$http","Authentication"]}(),function(){"use strict";function SettingsController($scope,Authentication){var vm=this;vm.user=Authentication.user}angular.module("users").controller("SettingsController",SettingsController),SettingsController.$inject=["$scope","Authentication"]}(),function(){"use strict";function passwordValidator(PasswordValidator){function link(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.getPopoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.getPopoverMsg="",scope.passwordErrors=[],status=!0)}return status}}var directive={require:"ngModel",link:link};return directive}angular.module("users").directive("passwordValidator",passwordValidator),passwordValidator.$inject=["PasswordValidator"]}(),function(){"use strict";function passwordVerify(){function link(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin===password})})}var directive={require:"ngModel",scope:{passwordVerify:"="},link:link};return directive}angular.module("users").directive("passwordVerify",passwordVerify)}(),function(){"use strict";function lowercase(){function link(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}var directive={require:"ngModel",link:link};return directive}angular.module("users").directive("lowercase",lowercase)}(),function(){"use strict";function Authentication($window){var auth={user:$window.user};return auth}angular.module("users.services").factory("Authentication",Authentication),Authentication.$inject=["$window"]}(),function(){"use strict";function PasswordValidator($window){function getResult(password){var result=owaspPasswordStrengthTest.test(password);return result}function getPopoverMsg(){var popoverMsg="Six or more characters.";return popoverMsg}var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest,service={getResult:getResult,getPopoverMsg:getPopoverMsg};return service}angular.module("users.services").factory("PasswordValidator",PasswordValidator),PasswordValidator.$inject=["$window"]}(),function(){"use strict";function UsersService($resource){return $resource("api/users",{},{update:{method:"PUT"}})}function AdminService($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}angular.module("users.services").factory("UsersService",UsersService),UsersService.$inject=["$resource"],angular.module("users.admin.services").factory("AdminService",AdminService),AdminService.$inject=["$resource"]}(),function(){"use strict";function viewVideoWork($rootScope,$http,$timeout,$mdDialog,$mdMedia,$mdToast,$sce,VideoWorks,PhotoWorks,VideoCoverImage,Upload){var directive={restrict:"E",scope:{work:"="},link:function(scope){},templateUrl:"modules/video-works/client/views/view-video-work.html"};return directive}function videoWork($rootScope,$http,$timeout,$mdDialog,$mdMedia,$mdToast,$sce,VideoWorks,PhotoWorks,VideoCoverImage,Upload){var directive={restrict:"E",scope:{work:"="},link:function(scope,elem,attr){scope.customFullscreen=$mdMedia("xs")||$mdMedia("sm"),scope.coverImageUrl=scope.work.coverImageUrl,scope.showVideoWork=function(ev){console.log("showVideoWork()");var useFullScreen=($mdMedia("sm")||$mdMedia("xs"))&&scope.customFullscreen;$rootScope.currentWork=scope.work,$mdDialog.show({controller:["scope","$mdDialog","$sce","work",function(scope,$mdDialog,$sce,work){function extractDomain(url){var domain;return domain=url.indexOf("://")>-1?url.split("/")[2]:url.split("/")[0],domain=domain.split(":")[0]}console.log("dialog controller"),console.log("work is: ",work),scope.workTitle=work.title,scope.workInfo=work.workInfo,scope.directors=work.directedBy,scope.editors=work.editedBy,scope.cast=work.cast,scope.copyright=work.copyright;var domain=extractDomain(work.videoUrl);if(console.log("domain is: ",domain),"youtube.com"===domain||"www.youtube.com"===domain){console.log("youtube domain"),scope.domain="youtube";var videoUrl=work.videoUrl.replace("watch?v=","embed/");scope.videoUrl=$sce.trustAsResourceUrl(videoUrl),console.log("work.videoUrl: ",work.videoUrl),console.log("scope.videoUrl: ",scope.videoUrl)}if("vimeo.com"===domain||"www.vimeo.com"===domain){console.log("vimeo domain");var vimeoId=work.videoUrl.substring(work.videoUrl.lastIndexOf("/")+1),videoUrl="//player.vimeo.com/video/"+vimeoId;scope.videoUrl=$sce.trustAsResourceUrl(videoUrl),console.log("vimeo id:",vimeoId),scope.domain="vimeo",scope.vimeoId=vimeoId}"facebook.com"!==domain&&"www.facebook.com"!==domain||(scope.videoUrl="https://www.facebook.com/plugins/video.php?href="+work.videoUrl,scope.videoUrl=$sce.trustAsResourceUrl(scope.videoUrl),scope.domain="facebook",console.log("work.videoUrl: ",work.videoUrl),console.log("scope.videoUrl: ",scope.videoUrl)),$rootScope.hide=function(){$mdDialog.hide()},scope.cancel=function(){$mdDialog.cancel()},$rootScope.answer=function(answer){$mdDialog.hide(answer)}}],locals:{work:scope.work},templateUrl:"modules/video-works/client/views/view-video-work.html",parent:angular.element(document.body),targetEvent:ev,autoWrap:!1,clickOutsideToClose:!0,fullscreen:useFullScreen})},scope.deleteVideoWork=function(work){console.log("deleteVideoWork()"),VideoWorks.deleteVideoWork(work)},scope.editVideoWork=function(){console.log("editVideoWork()"),scope.castModel=[],scope.directorsModel=[],scope.editorsModel=[],scope.editors=scope.work.editedBy,scope.directors=scope.work.directedBy,scope.cast=scope.work.cast,console.log("scope.work is: ",scope.work);for(var i=0;i<scope.work.cast.length;++i)console.log("work.cast[i]: ",scope.work.cast[i]),scope.castModel.push({name:"cast_"+i}),scope.castNumber=i;for(var i=0;i<scope.work.directedBy.length;++i)console.log("work.directors[i]: ",scope.work.directedBy[i]),scope.directorsModel.push({name:"director_"+i}),scope.directorNumber=i;for(var i=0;i<scope.work.editedBy.length;++i)console.log("work.editors[i]: ",scope.work.editedBy[i]),scope.editorsModel.push({name:"editor_"+i}),scope.editorNumber=i;$mdDialog.show({locals:{work:scope.work,cast:scope.castMembers,editors:scope.editors,directors:scope.directors,castModel:scope.castModel,directorsModel:scope.directorsModel,editorsModel:scope.editorsModel,coverImageUrl:scope.coverImageUrl},controller:["$scope","$rootScope","$mdDialog","$mdToast","work","cast","editors","directors","castModel","editorsModel","directorsModel","coverImageUrl",function($scope,$rootScope,$mdDialog,$mdToast,work,cast,editors,directors,castModel,editorsModel,directorsModel,coverImageUrl){function sanitizePosition(){var current=$scope.toastPosition;current.bottom&&last.top&&(current.top=!1),current.top&&last.bottom&&(current.bottom=!1),current.right&&last.left&&(current.left=!1),current.left&&last.right&&(current.right=!1),last=angular.extend({},current)}var last={bottom:!1,top:!0,left:!1,right:!0};$scope.toastPosition=angular.extend({},last),$scope.getToastPosition=function(){return sanitizePosition(),Object.keys($scope.toastPosition).filter(function(pos){return $scope.toastPosition[pos]}).join(" ")},$scope.showSimpleToast=function(error){var pinTo=$scope.getToastPosition();"images"===error?$mdToast.show($mdToast.simple().textContent("Please add at least one image.").position(pinTo).hideDelay(3e3)):"title"===error?$mdToast.show($mdToast.simple().textContent("Another work with that title already exists.").position(pinTo).hideDelay(3e3)):"video-image"===error?$mdToast.show($mdToast.simple().textContent("Please add a cover image.").position(pinTo).hideDelay(3e3)):"missing-title"===error?$mdToast.show($mdToast.simple().textContent("Please add a title.").position(pinTo).hideDelay(3e3)):"video-url"===error&&$mdToast.show($mdToast.simple().textContent("Please add a video URL.").position(pinTo).hideDelay(3e3))},$scope.work=work,$scope.cast=work.cast,$scope.editors=work.editedBy,$scope.directors=work.directedBy,$scope.castModel=castModel,$scope.editorsModel=editorsModel,$scope.directorsModel=directorsModel,$scope.bwUploading={visibility:"hidden"};var oldWorkTitle=work.title;console.log("oldWorkTitle: ",oldWorkTitle);var oldCast=work.cast;console.log("oldCast: ",oldCast);var oldVideoUrl=work.videoUrl,oldCopyright=(work.editedBy,work.directedBy,work.copyright),oldWorkInfo=work.workInfo,oldCastModel=castModel,oldEditorsModel=editorsModel,oldDirectorsModel=directorsModel;$scope.cancelEdit=function(){console.log("oldWorkTitle: ",oldWorkTitle),console.log("oldCast: ",oldCast),console.log("$scope.cast: ",$scope.cast),console.log("$scope.directors: ",$scope.directors),console.log("$scope.editors: ",$scope.editors),work.title=oldWorkTitle,work.cast=$scope.cast,work.editedBy=$scope.editors,work.directedBy=$scope.directors,work.videoUrl=oldVideoUrl,work.copyright=oldCopyright,work.workInfo=oldWorkInfo,$scope.castModel=oldCastModel,$scope.directorsModel=oldDirectorsModel,$scope.editorsModel=oldEditorsModel,$mdDialog.cancel()},$scope.selectedCoverImage=function(file){VideoCoverImage.addImage(file)},$scope.submitEditedWork=function(){console.log("work.title: ",work.title),console.log("work.editedBy: ",work.editedBy),console.log("work.directedBy: ",work.directedBy),console.log("work.cast: ",work.cast),console.log("work.copyright: ",work.copyright),console.log("work.videoUrl: ",work.videoUrl),console.log("work.workInfo: ",work.workInfo),console.log("work.coverImageUrl: ",work.coverImageUrl);for(var i=0;i<work.directedBy.length;++i)(""===work.directedBy[i]||work.directedBy[i].match(/^\s*$/))&&(work.directedBy.splice(i,1),i=0);for(var i=0;i<work.editedBy.length;++i)(""===work.editedBy[i]||work.editedBy[i].match(/^\s*$/))&&(work.editedBy.splice(i,1),i=0);for(var i=0;i<work.cast.length;++i)(""===work.cast[i]||work.cast[i].match(/^\s*$/))&&(work.cast.splice(i,1),i=0);if(angular.equals([],$rootScope.videoCoverImage))return console.log("Must add at least one image"),void $scope.showSimpleToast("video-image");if(""===work.title)return void $scope.showSimpleToast("missing-title");for(var i=0;i<PhotoWorks.photoWorks.length;++i)if(PhotoWorks.photoWorks[i].title===$scope.photoWorkTitle)return void $scope.showSimpleToast("title");for(var i=0;i<VideoWorks.videoWorks.length;++i)if(VideoWorks.videoWorks[i].title===$scope.photoWorkTitle)return void $scope.showSimpleToast("title");return""===work.videoUrl?void $scope.showSimpleToast("video-url"):void(0!==VideoCoverImage.image.length?($scope.bwUploading.visibility="visible",console.log("VideoCoverImage: ",VideoCoverImage.image),Upload.upload({url:"/api/video_works/edit_video_work",arrayKey:"",data:{file:VideoCoverImage.image[0],work:JSON.stringify(work)}}).then(function(resp){console.log("Success: ",resp);var edit=resp.data;console.log("resp.data: ",edit),VideoWorks.addEdit(edit),work=edit,coverImageUrl=edit.coverImageUrl,$scope.uploadProgress=0,$scope.bwUploading.visibility="hidden",VideoCoverImage.image=[],$mdDialog.hide(),function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];d.getElementById(id)||(js=d.createElement(s),js.id=id,js.src="//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.7",fjs.parentNode.insertBefore(js,fjs))}(document,"script","facebook-jssdk")},function(resp){console.log("resp.status: ",resp.status)},function(evt){console.log("evt: ",evt),$scope.uploadProgress=evt.loaded/evt.total*100})):Upload.upload({url:"/api/video_works/edit_video_work",arrayKey:"",data:{file:{},work:JSON.stringify(work)}}).then(function(resp){console.log("Success: ",resp);var edit=resp.data;console.log("resp.data: ",edit),VideoWorks.addEdit(edit),work=edit,coverImageUrl=edit.coverImageUrl,$mdDialog.hide(),function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];d.getElementById(id)||(js=d.createElement(s),js.id=id,js.src="//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.7",fjs.parentNode.insertBefore(js,fjs))}(document,"script","facebook-jssdk")},function(resp){console.log("resp.status: ",resp.status)},function(evt){console.log("evt: ",evt)}))}}],clickOutsideToClose:!0,templateUrl:"modules/bw-interface/client/views/edit-video-work.html"})}},templateUrl:"modules/video-works/client/views/video-work.html"};return directive}angular.module("videoWorks").directive("videoWork",videoWork).directive("viewVideoWork",viewVideoWork),videoWork.$inject=["$rootScope","$http","$timeout","$mdDialog","$mdMedia","$mdToast","$sce","VideoWorks","PhotoWorks","VideoCoverImage","Upload"],viewVideoWork.$inject=["$rootScope","$http","$timeout","$mdDialog","$mdMedia","$mdToast","$sce","VideoWorks","PhotoWorks","VideoCoverImage","Upload"]}(),function(){"use strict";function VideoWorks($rootScope,$http){var service={videoWorks:[],addVideoWork:function(work){service.videoWorks.push(work),$rootScope.$broadcast("videoWorks.update")},deleteVideoWork:function(work){$http["delete"]("/api/video_works/delete_video_work",{params:{data:work}}).then(function(resp){if(200===resp.status){for(var i=0;i<service.videoWorks.length;++i)service.videoWorks[i]._id===work._id&&service.videoWorks.splice(i,1);$rootScope.$broadcast("videoWorks.update")}})},getVideoWorks:function(){
$http.get("/api/video_works/get_video_works").then(function(resp){console.log("response is: ",resp),service.videoWorks=resp.data,$rootScope.$broadcast("videoWorks.update")})},addEdit:function(edit){for(var i=0;i<service.videoWorks.length;++i)edit._id===service.videoWorks[i]._id&&(service.videoWorks[i]=edit,$rootScope.$broadcast("videoWorks.update"))}};return service}angular.module("videoWorks").service("VideoWorks",VideoWorks),VideoWorks.$inject=["$rootScope","$http"]}(),function(){function WorksController($scope,$rootScope,Upload,$mdDialog,$mdToast,$http,Works,$filter){$scope.works=[],$scope.getWorks=function(){console.log("getWorks controller"),$scope.bool=!1,Works.getWorks(),console.log("bool: ",$scope.bool)},$scope.$on("works.update",function(event){$scope.works=Works.works,$scope.bool=!0,console.log("$scope.works is: ",$scope.works)})}angular.module("works",["ngMaterial","core","photoWorks","videoWorks","bw-interface"]).controller("WorksController",WorksController),WorksController.$inject=["$scope","$rootScope","Upload","$mdDialog","$mdToast","$http","Works","$filter"]}(),function(){"use strict";function worksGridItem($rootScope,$state,$http,$window,$mdDialog,$mdToast){var directive={restrict:"E",scope:{work:"="},link:function(scope,elem,attr,$window){$(elem).hoverdir({hoverDelay:100,hoverElem:".hover-el"}),scope.mouseAction=function(event){},scope.enter=function(event){console.log("event is: ",event)},scope.leave=function(event){console.log("event is: ",event)},scope.viewWork=function(event){if(console.log("viewWork"),scope.work.videoUrl){var body=$("section");console.log("body: ",body),body.css("overflow","hidden"),$mdDialog.show({controller:["scope","event","$mdDialog","$sce","work",function(scope,event,$mdDialog,$sce,work){function extractDomain(url){var domain;return domain=url.indexOf("://")>-1?url.split("/")[2]:url.split("/")[0],domain=domain.split(":")[0]}console.log("dialog controller"),console.log("work is: ",work),scope.workTitle=work.title,scope.cast=work.cast,scope.joinedCast=scope.cast.join(", "),scope.directors=work.directedBy,scope.postInfo=work.workInfo,scope.editors=work.editedBy,scope.copyright=work.copyright;var domain=extractDomain(work.videoUrl);if(console.log("domain is: ",domain),"youtube.com"===domain||"www.youtube.com"===domain){console.log("youtube domain"),scope.domain="youtube";var videoUrl=work.videoUrl.replace("watch?v=","embed/");scope.videoUrl=$sce.trustAsResourceUrl(videoUrl),console.log("work.videoUrl: ",work.videoUrl),console.log("scope.videoUrl: ",scope.videoUrl)}if("vimeo.com"===domain||"www.vimeo.com"===domain){console.log("vimeo domain");var vimeoId=work.videoUrl.substring(work.videoUrl.lastIndexOf("/")+1),videoUrl="//player.vimeo.com/video/"+vimeoId;scope.videoUrl=$sce.trustAsResourceUrl(videoUrl),console.log("vimeo id:",vimeoId),scope.domain="vimeo",scope.vimeoId=vimeoId}"facebook.com"!==domain&&"www.facebook.com"!==domain||(scope.videoUrl="https://www.facebook.com/plugins/video.php?href="+work.videoUrl,scope.videoUrl=$sce.trustAsResourceUrl(scope.videoUrl),scope.domain="facebook"),$rootScope.hide=function(){$mdDialog.hide()},scope.cancel=function(){$mdDialog.cancel()},$rootScope.answer=function(answer){$mdDialog.hide(answer)}}],locals:{work:scope.work,event:event},templateUrl:"modules/works/client/views/view-video.html",parent:angular.element(document.body),targetEvent:event,onRemoving:function(){body.css("overflow","auto")},autoWrap:!1,clickOutsideToClose:!0,closeTo:elem,fullscreen:!1})}else $mdDialog.show({controller:["scope","event","$mdDialog","$sce","work",function(scope,event,$mdDialog,$sce,work){scope.currentIndex=0,console.log("dialog controller"),console.log("work is: ",work),scope.workTitle=work.title,scope.images=work.images,scope.next=function(event){console.log("next()"),scope.currentIndex+1===scope.images.length?scope.currentIndex=0:scope.currentIndex++},scope.prev=function(event){console.log("prev()"),scope.currentIndex-1===-1?scope.currentIndex=scope.images.length-1:scope.currentIndex--},$rootScope.hide=function(){$mdDialog.hide()},scope.cancel=function(){$mdDialog.cancel()},$rootScope.answer=function(answer){$mdDialog.hide(answer)}}],locals:{work:scope.work,event:event,element:elem},templateUrl:"modules/works/client/views/view-photos.html",parent:angular.element(document.body),targetEvent:event,onRemoving:function(){},autoWrap:!1,clickOutsideToClose:!0,closeTo:elem,fullscreen:!1})}},templateUrl:"modules/works/client/views/works-grid-item.html"};return directive}angular.module("works").directive("worksGridItem",worksGridItem),worksGridItem.$inject=["$rootScope","$state","$http","$window","$mdDialog","$mdToast"]}(),function(){angular.module("works").filter("listToMatrix",function(){function listToMatrix(list,elementsPerSubArray){console.log("filter");var i,k,matrix=[];for(i=0,k=-1;i<list.length;i++)i%elementsPerSubArray===0&&(k++,matrix[k]=[]),matrix[k].push(list[i]);return matrix}return function(list,elementsPerSubArray){return listToMatrix(list,elementsPerSubArray)}})}(),function(){"use strict";function Works($rootScope,$http){var service={getWorks:function(){$http.get("/api/works/get_all_works").then(function(resp){console.log("response is: ",resp),service.works=resp.data,console.log("service.works is: ",service.works),console.log("typeof service.works is: ","[object Array]"==Object.prototype.toString.call(service.works)),$rootScope.$broadcast("works.update")})}};return service}angular.module("works").service("Works",Works),Works.$inject=["$rootScope","$http"]}();